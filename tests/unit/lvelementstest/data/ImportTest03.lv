////// plugin1/live.plugin.json

{
    "name" : "plugin1",
    "package": ".",
    "modules": ["A", "B"]
}

////// plugin1/live.package.json

{
    "name" : "plugin1",
    "version" : "1.0.0"
}

////// plugin1/A.lv

component default < Element{
    function toString : (){
        return "classs[A]"
    }
}

////// plugin1/A.lv.js

module.exports["A"] = class A extends Element{
    toString(){
        return "class[A]"
    }
}

////// plugin1/B.lv

component default < A{
    function toString : (){
    }
}

////// plugin1/B.lv.js

var A = imports.get("A")

module.exports["B"] = class B extends A{
}

////// main.lv

import .plugin1

component default < Element{
    string b : {
        return (new B()).toString()
    }
}

////// main.lv.js

imports.require(".plugin1")

var B = imports.get("B")

module.exports["main"] = class main extends Element{
    constructor(){
        super()
        var b = new B();
        Element.addProperty(this, "b", {
            type: "string",
            value: (function(){
                return (new B()).toString()
            }()),
            notify: "bChanged"
        })
    }
}
