////// live.plugin.json

{
    "name" : "main",
    "package": ".",
    "modules": ["A", "B", "main"]
}

////// live.package.json

{
    "name" : "main",
    "version" : "1.0.0"
}

////// A.lv

component default < Element{
    fn toString(){
        return "class[A]"
    }
}

////// A.lv.js

module.exports["A"] = class A extends Element{
    toString(){
        return "class[A]"
    }
}

////// B.lv

component default < Element{
    fn toString(){
        return "class[B]"
    }
}

////// B.lv.js

module.exports["B"] = class B extends Element{
    toString(){
        return "class[B]"
    }
}

////// main.lv

component default < Element{
    string a : {
        return (new A()).toString()
    }
    string b : {
        return (new B()).toString()
    }
}

////// main.lv.js

var A = imports.get("A")
var B = imports.get("B")

module.exports["main"] = class main extends Element{
    constructor(){
        super()

        Element.addProperty(this, "a", {
            type: "string",
            notify: "aChanged"
        })
        Element.addProperty(this, "b", {
            type: "string",
            notify: "bChanged"
        })

        this.a = (function(){
            return (new A()).toString()
        }.bind(this)())

        this.b = (function(){
            return (new B()).toString()
        }.bind(this)())

    }
}


