////// live.plugin.json

{
    "name" : "main",
    "package": ".",
    "modules": ["A", "main"]
}

////// live.package.json

{
    "name" : "main",
    "version" : "1.0.0"
}

////// A.lv

instance default Element{
    string a : "class[A]"
}

////// A.lv.js

module.exports["A"] = (function(parent){
    this.setParent(parent)

    Element.addProperty(this, "a", { type: "string", notify: "aChanged" })
    this.a = "class[A]"

    return this

}.bind(new Element())(null))

////// main.lv

component default < Element{
    string a : A.a
}

////// main.lv.js

var A = imports.get("A")

module.exports["main"] = class main extends Element{
    constructor(){
        super()
        this.__initialize()
    }

    __initialize(){
        Element.addProperty(this, 'a', { type: "string", notify: "aChanged" })
        Element.assignPropertyExpression(this,
            'a',
            function(){ return A.a }.bind(this),
            [ [ A, 'aChanged' ] ]
        )
    }

}


