import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'Livekeys 1.7.0'

Module {
    dependencies: []
    Component { name: "QAbstractListModel"; prototype: "QAbstractItemModel" }
    Component {
        name: "lv::CodeCompletionModel"
        prototype: "QAbstractListModel"
        exports: ["editor/CodeCompletionModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "isEnabled"; type: "bool"; isReadonly: true }
        Property { name: "completionPosition"; type: "int"; isReadonly: true }
        Signal {
            name: "completionPositionChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "isEnabledChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Method { name: "enable" }
        Method { name: "disable" }
    }
    Component {
        name: "lv::CodePalette"
        prototype: "QObject"
        exports: ["editor/CodePalette 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "item"; type: "QQuickItem"; isPointer: true }
        Property { name: "type"; type: "QString" }
        Property { name: "value"; type: "QVariant" }
        Property { name: "name"; type: "QString"; isReadonly: true }
        Property { name: "extension"; type: "QObject"; isReadonly: true; isPointer: true }
        Signal {
            name: "init"
            Parameter { name: "value"; type: "QVariant" }
        }
        Signal {
            name: "codeChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "isBindingChange"; type: "bool" }
    }
    Component {
        name: "lv::DocumentHandler"
        prototype: "QObject"
        exports: ["editor/DocumentHandler 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "LanguageFeatures"
            values: {
                "LanguageHelp": 0,
                "LanguageCodeCompletion": 1,
                "LanguageScope": 2,
                "LanguageHighlighting": 3,
                "LanguageJumpToDef": 4,
                "LanguageFindReferences": 5,
                "LanguageDiagnostics": 6
            }
        }
        Property {
            name: "completionModel"
            type: "lv::CodeCompletionModel"
            isReadonly: true
            isPointer: true
        }
        Property { name: "codeHandler"; type: "QObject"; isReadonly: true; isPointer: true }
        Property { name: "editorFocus"; type: "bool" }
        Signal { name: "targetChanged" }
        Signal {
            name: "cursorPositionRequest"
            Parameter { name: "position"; type: "int" }
        }
        Signal { name: "contentsChangedManually" }
        Signal { name: "aboutToDeleteHandler" }
        Method {
            name: "insertCompletion"
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
            Parameter { name: "completion"; type: "QString" }
        }
        Method {
            name: "documentContentsChanged"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "charsRemoved"; type: "int" }
            Parameter { name: "charsAdded"; type: "int" }
        }
        Method {
            name: "setDocument"
            Parameter { name: "document"; type: "lv::ProjectDocument"; isPointer: true }
            Parameter { name: "options"; type: "QJSValue" }
        }
        Method {
            name: "setDocument"
            Parameter { name: "document"; type: "lv::ProjectDocument"; isPointer: true }
        }
        Method {
            name: "manageIndent"
            Parameter { name: "from"; type: "int" }
            Parameter { name: "length"; type: "int" }
            Parameter { name: "undo"; type: "bool" }
        }
        Method {
            name: "manageIndent"
            Parameter { name: "from"; type: "int" }
            Parameter { name: "length"; type: "int" }
        }
        Method {
            name: "insertTab"
            Parameter { name: "position"; type: "int" }
        }
        Method {
            name: "has"
            type: "bool"
            Parameter { name: "feature"; type: "int" }
        }
    }
    Component {
        name: "lv::DocumentationLoader"
        prototype: "QObject"
        exports: ["editor/DocumentationLoader 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "load"; type: "QJSValue" }
    }
    Component {
        name: "lv::PaletteList"
        prototype: "QAbstractListModel"
        exports: ["editor/PaletteList 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method { name: "position"; type: "int" }
        Method { name: "size"; type: "int" }
        Method {
            name: "loadAt"
            type: "lv::CodePalette*"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "contentAt"
            type: "QJSValue"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "lv::TextSearch"
        prototype: "QObject"
        exports: ["editor/TextSearch 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "text"; type: "QString" }
        Property { name: "value"; type: "QString" }
        Property { name: "asLines"; type: "bool" }
        Property { name: "output"; type: "QVariantList"; isReadonly: true }
        Method {
            name: "setText"
            Parameter { name: "text"; type: "QString" }
        }
        Method {
            name: "setValue"
            Parameter { name: "value"; type: "QString" }
        }
        Method {
            name: "setAsLines"
            Parameter { name: "asLines"; type: "bool" }
        }
    }
    Component {
        name: "lv::Theme"
        prototype: "QObject"
        exports: ["editor/Theme 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "name"; type: "QString" }
    }
    Component {
        name: "lv::WorkspaceExtension"
        prototype: "QObject"
        exports: ["editor/LiveExtension 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "globals"; type: "QObject"; isPointer: true }
        Property { name: "interceptFile"; type: "QJSValue" }
        Property { name: "interceptLanguage"; type: "QJSValue" }
        Property { name: "interceptMenu"; type: "QJSValue" }
        Property { name: "panes"; type: "QJSValue" }
        Property { name: "commands"; type: "QJSValue" }
        Property { name: "keyBindings"; type: "QJSValue" }
        Property { name: "configuration"; type: "QJSValue" }
        Property { name: "themes"; type: "QJSValue" }
    }
}
