import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'Livekeys 1.7.0'

Module {
    dependencies: []
    Component { name: "QAbstractListModel"; prototype: "QAbstractItemModel" }
    Component {
        name: "lv::ComponentSource"
        defaultProperty: "source"
        prototype: "QObject"
        exports: ["live/ComponentSource 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QQmlComponent"; isPointer: true }
    }
    Component {
        name: "lv::EventRelay"
        prototype: "QObject"
        exports: ["live/EventRelay 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method {
            name: "relayKeyEvent"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
            Parameter { name: "key"; type: "int" }
            Parameter { name: "modifiers"; type: "int" }
        }
    }
    Component {
        name: "lv::LicenseSettings"
        prototype: "QAbstractListModel"
        exports: ["live/LicenseSettings 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "highlights"; type: "int"; isReadonly: true }
        Signal {
            name: "licenseAccepted"
            Parameter { name: "id"; type: "QString" }
        }
        Method {
            name: "acceptLicense"
            Parameter { name: "id"; type: "QString" }
        }
        Method {
            name: "addLicense"
            Parameter { name: "id"; type: "QString" }
            Parameter { name: "alias"; type: "QString" }
            Parameter { name: "text"; type: "QString" }
            Parameter { name: "valid"; type: "bool" }
            Parameter { name: "highlight"; type: "bool" }
        }
        Method {
            name: "addLicense"
            Parameter { name: "id"; type: "QString" }
            Parameter { name: "alias"; type: "QString" }
            Parameter { name: "text"; type: "QString" }
            Parameter { name: "valid"; type: "bool" }
        }
        Method {
            name: "addLicense"
            Parameter { name: "id"; type: "QString" }
            Parameter { name: "alias"; type: "QString" }
            Parameter { name: "text"; type: "QString" }
        }
        Method {
            name: "hasLicense"
            type: "bool"
            Parameter { name: "id"; type: "QString" }
        }
        Method {
            name: "licenseText"
            type: "QString"
            Parameter { name: "id"; type: "QString" }
        }
    }
    Component {
        name: "lv::LineGrid"
        defaultProperty: "data"
        prototype: "QQuickPaintedItem"
        exports: ["live/LineGrid 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "colSpacing"; type: "double" }
        Property { name: "rowSpacing"; type: "double" }
        Property { name: "thickness"; type: "double" }
        Property { name: "color"; type: "QColor" }
        Method {
            name: "setColSpacing"
            Parameter { name: "colSpacing"; type: "double" }
        }
        Method {
            name: "setRowSpacing"
            Parameter { name: "rowSpacing"; type: "double" }
        }
        Method {
            name: "setThickness"
            Parameter { name: "thickness"; type: "double" }
        }
        Method {
            name: "setColor"
            Parameter { name: "color"; type: "QColor" }
        }
    }
    Component {
        name: "lv::LogListener"
        prototype: "QObject"
        exports: ["live/LogListener 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "address"; type: "QString" }
        Property { name: "port"; type: "int" }
        Property { name: "allowedIps"; type: "QStringList" }
        Signal { name: "listening" }
        Method { name: "newConnection" }
    }
    Component {
        name: "lv::QmlColor"
        prototype: "QObject"
        exports: ["live/Color 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method {
            name: "RgbToHsv"
            type: "QColor"
            Parameter { name: "rgb"; type: "QColor" }
        }
        Method {
            name: "toHex"
            type: "QString"
            Parameter { name: "rgb"; type: "QColor" }
        }
    }
    Component {
        name: "lv::QmlComponentMap"
        prototype: "QObject"
        exports: ["live/ComponentMap 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "input"; type: "QVariantList" }
        Property { name: "f"; type: "QQmlComponent"; isPointer: true }
        Property { name: "output"; type: "QVariantList"; isReadonly: true }
    }
    Component {
        name: "lv::QmlComponentMapData"
        prototype: "QObject"
        exports: ["live/ComponentMapData 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "current"; type: "QVariant"; isReadonly: true }
        Method { name: "index"; type: "int" }
        Method {
            name: "result"
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        name: "lv::QmlFork"
        prototype: "lv::RemoteContainer"
        exports: ["live/Fork 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "layers"; type: "QStringList" }
        Method {
            name: "onSharedMemoryReadStatusChanged"
            Parameter { name: "status"; type: "int" }
        }
        Method {
            name: "onSharedMemoryMessage"
            Parameter { name: "message"; type: "QByteArray" }
            Parameter { name: "type"; type: "int" }
            Parameter { name: "id"; type: "int" }
        }
        Method {
            name: "onSharedMemoryWriteStatusChanged"
            Parameter { name: "status"; type: "int" }
        }
    }
    Component {
        name: "lv::QmlForkNode"
        prototype: "QObject"
        exports: ["live/ForkNode 1.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "error"
            Parameter { name: "type"; type: "QByteArray" }
            Parameter { name: "code"; type: "Exception::Code" }
            Parameter { name: "message"; type: "QString" }
        }
        Method {
            name: "onSharedMemoryReadStatusChanged"
            Parameter { name: "status"; type: "int" }
        }
        Method {
            name: "onSharedMemoryMessage"
            Parameter { name: "message"; type: "QByteArray" }
            Parameter { name: "type"; type: "int" }
            Parameter { name: "id"; type: "int" }
        }
        Method {
            name: "onSharedMemoryWriteStatusChanged"
            Parameter { name: "status"; type: "int" }
        }
    }
    Component {
        name: "lv::QmlMain"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["live/Main 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "options"; type: "QJSValue" }
        Property { name: "version"; type: "QString" }
        Signal { name: "run" }
        Method { name: "beforeCompile" }
        Method { name: "afterCompile" }
        Method { name: "arguments" }
        Method {
            name: "option"
            type: "QString"
            Parameter { name: "key"; type: "QString" }
        }
        Method {
            name: "isOptionSet"
            type: "bool"
            Parameter { name: "key"; type: "QString" }
        }
    }
    Component {
        name: "lv::QmlSubproject"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["live/Subproject 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "label"; type: "QString" }
        Property { name: "sourceComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "source"; type: "QString" }
        Property { name: "sourceMonitor"; type: "bool" }
        Property { name: "root"; type: "QObject"; isReadonly: true; isPointer: true }
        Method { name: "_runnableDestroyed" }
    }
    Component {
        name: "lv::RemoteContainer"
        prototype: "QObject"
        exports: ["live/RemoteContainer 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Signal { name: "ready" }
    }
    Component {
        name: "lv::RemoteLine"
        defaultProperty: "source"
        prototype: "QObject"
        exports: ["live/RemoteLine 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "lv::ComponentSource"; isPointer: true }
        Property { name: "connection"; type: "lv::RemoteContainer"; isPointer: true }
        Property { name: "result"; type: "QQmlPropertyMap"; isReadonly: true; isPointer: true }
        Signal { name: "complete" }
        Method { name: "initialize" }
    }
    Component {
        name: "lv::RemoteLineResponse"
        prototype: "QObject"
        exports: ["live/RemoteLineResponse 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method {
            name: "send"
            Parameter { name: "propertyName"; type: "QString" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        name: "lv::StaticLoader"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["live/StaticLoader 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QQmlComponent"; isPointer: true }
        Property { name: "item"; type: "QObject"; isReadonly: true; isPointer: true }
        Signal { name: "itemCreated" }
        Method {
            name: "setSource"
            Parameter { name: "arg"; type: "QQmlComponent"; isPointer: true }
        }
        Method {
            name: "staticLoad"
            Parameter { name: "id"; type: "QString" }
        }
    }
    Component {
        name: "lv::StringBasedLoader"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["live/StringBasedLoader 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QString" }
        Property { name: "item"; type: "QObject"; isReadonly: true; isPointer: true }
    }
    Component {
        name: "lv::TcpLineConnection"
        prototype: "lv::RemoteContainer"
        exports: ["live/TcpLineConnection 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "address"; type: "QString" }
        Property { name: "port"; type: "int" }
        Method { name: "socketConnected" }
        Method { name: "socketDisconnected" }
        Method {
            name: "socketError"
            Parameter { type: "QAbstractSocket::SocketError" }
        }
        Method { name: "socketData" }
        Method { name: "reconnect" }
        Method {
            name: "setAddress"
            Parameter { name: "address"; type: "QString" }
        }
        Method {
            name: "setPort"
            Parameter { name: "port"; type: "int" }
        }
    }
    Component {
        name: "lv::TcpLineServer"
        prototype: "QObject"
        exports: ["live/TcpLineServer 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "address"; type: "QString" }
        Property { name: "port"; type: "int" }
        Signal { name: "resultChanged" }
        Signal { name: "complete" }
        Signal { name: "listening" }
        Signal {
            name: "error"
            Parameter { name: "type"; type: "QByteArray" }
            Parameter { name: "code"; type: "int" }
            Parameter { name: "message"; type: "QString" }
        }
        Method { name: "newConnection" }
    }
    Component {
        name: "lv::Triangle"
        defaultProperty: "data"
        prototype: "QQuickPaintedItem"
        exports: ["live/Triangle 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Rotation"
            values: {
                "Top": 0,
                "Right": 1,
                "Bottom": 2,
                "Left": 3
            }
        }
        Property { name: "rotation"; type: "int" }
        Property { name: "color"; type: "QColor" }
    }
    Component {
        name: "lv::ValueHistory"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["live/ValueHistory 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DisplayHeight"
            values: {
                "Auto": -2147483648
            }
        }
        Property { name: "currentValue"; type: "double" }
        Property { name: "maxDisplayValue"; type: "double" }
        Property { name: "minDisplayValue"; type: "double" }
        Property { name: "maxHistory"; type: "int" }
        Property { name: "renderColor"; type: "QColor" }
    }
    Component {
        name: "lv::VisualLogFilter"
        prototype: "lv::VisualLogBaseModel"
        exports: ["live/VisualLogFilter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "lv::VisualLogBaseModel"; isPointer: true }
        Property { name: "tag"; type: "QString" }
        Property { name: "prefix"; type: "QJSValue" }
        Property { name: "search"; type: "QJSValue" }
        Property { name: "isIndexing"; type: "bool"; isReadonly: true }
        Method { name: "refilterReady" }
        Method { name: "sourceDestroyed" }
        Method { name: "sourceModelReset" }
        Method { name: "sourceModelAboutToReset" }
        Method {
            name: "sourceRowsAboutToBeRemoved"
            Parameter { type: "QModelIndex" }
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
        Method {
            name: "sourceRowsInserted"
            Parameter { type: "QModelIndex" }
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
    }
    Component {
        name: "lv::Worker"
        defaultProperty: "acts"
        prototype: "QObject"
        exports: ["live/Worker 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "acts"; type: "QObject"; isList: true; isReadonly: true }
    }
}
