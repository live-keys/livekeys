import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'Livekeys 1.7.0'

Module {
    dependencies: []
    Component { name: "QAbstractListModel"; prototype: "QAbstractItemModel" }
    Component {
        name: "QAbstractRangeModel"
        prototype: "QObject"
        exports: ["timeline/AbstractRangeModel 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "contentWidth"; type: "qlonglong"; isReadonly: true }
        Signal {
            name: "itemsAboutToBeChanged"
            Parameter { name: "startPosition"; type: "qlonglong" }
            Parameter { name: "endPosition"; type: "qlonglong" }
        }
        Signal {
            name: "itemsChanged"
            Parameter { name: "startPosition"; type: "qlonglong" }
            Parameter { name: "endPosition"; type: "qlonglong" }
        }
        Signal {
            name: "itemCoordinatesChanged"
            Parameter { name: "oldPosition"; type: "qlonglong" }
            Parameter { name: "oldLength"; type: "qlonglong" }
            Parameter { name: "relativeIndex"; type: "int" }
            Parameter { name: "modelIt"; type: "QAbstractRangeModelIterator"; isPointer: true }
            Parameter { name: "newRelativeIndex"; type: "int" }
        }
        Signal {
            name: "itemsDataChanged"
            Parameter { type: "QAbstractRangeModelIterator"; isPointer: true }
            Parameter { name: "relativeIndex"; type: "int" }
            Parameter { name: "roles"; type: "QList<int>" }
        }
        Signal {
            name: "itemsDataChanged"
            Parameter { type: "QAbstractRangeModelIterator"; isPointer: true }
            Parameter { name: "relativeIndex"; type: "int" }
        }
        Method {
            name: "addSegment"
            Parameter { name: "position"; type: "qlonglong" }
            Parameter { name: "length"; type: "qlonglong" }
        }
        Method {
            name: "removeItem"
            Parameter { name: "position"; type: "qlonglong" }
            Parameter { name: "length"; type: "qlonglong" }
            Parameter { name: "relativeIndex"; type: "qlonglong" }
        }
    }
    Component {
        name: "QRangeView"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["timeline/RangeView 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "model"; type: "QAbstractRangeModel"; isPointer: true }
        Property { name: "viewportX"; type: "qlonglong" }
        Property { name: "viewportWidth"; type: "qlonglong" }
        Signal {
            name: "viewportWidthChanged"
            Parameter { name: "arg"; type: "qlonglong" }
        }
        Signal {
            name: "viewportXChanged"
            Parameter { name: "arg"; type: "qlonglong" }
        }
        Signal {
            name: "modelChanged"
            Parameter { name: "arg"; type: "QAbstractRangeModel"; isPointer: true }
        }
        Method {
            name: "setViewportWidth"
            Parameter { name: "arg"; type: "qlonglong" }
        }
        Method {
            name: "setViewportX"
            Parameter { name: "arg"; type: "qlonglong" }
        }
        Method {
            name: "setModel"
            Parameter { name: "arg"; type: "QAbstractRangeModel"; isPointer: true }
        }
        Method { name: "modelWidthChanged" }
        Method {
            name: "modelitemCoordinatesChanged"
            Parameter { name: "oldPosition"; type: "qlonglong" }
            Parameter { name: "oldLength"; type: "qlonglong" }
            Parameter { name: "relativeIndex"; type: "int" }
            Parameter { name: "modelIt"; type: "QAbstractRangeModelIterator"; isPointer: true }
            Parameter { name: "newRelativeIndex"; type: "int" }
        }
        Method {
            name: "modelItemDataChanged"
            Parameter { name: "modelIt"; type: "QAbstractRangeModelIterator"; isPointer: true }
            Parameter { name: "relativeIndex"; type: "int" }
            Parameter { name: "roles"; type: "QList<int>" }
        }
        Method {
            name: "modelItemsAboutToBeChanged"
            Parameter { name: "beginPosition"; type: "qlonglong" }
            Parameter { name: "endPosition"; type: "qlonglong" }
        }
        Method {
            name: "modelItemsChanged"
            Parameter { name: "beginPosition"; type: "qlonglong" }
            Parameter { name: "endPosition"; type: "qlonglong" }
        }
        Method {
            name: "setPositionViaDelegate"
            Parameter { name: "delegate"; type: "QQuickItem"; isPointer: true }
            Parameter { name: "position"; type: "qlonglong" }
        }
        Method {
            name: "setLengthViaDelegate"
            Parameter { name: "delegate"; type: "QQuickItem"; isPointer: true }
            Parameter { name: "length"; type: "qlonglong" }
        }
        Method {
            name: "setDataViaDelegate"
            Parameter { name: "delegate"; type: "QQuickItem"; isPointer: true }
            Parameter { name: "role"; type: "QString" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "removeItemViaDelegate"
            Parameter { name: "delegate"; type: "QQuickItem"; isPointer: true }
        }
    }
    Component {
        name: "lv::Keyframe"
        prototype: "lv::Segment"
        exports: ["timeline/Keyframe 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "easing"; type: "QEasingCurve" }
        Property { name: "value"; type: "double" }
        Signal { name: "toChanged" }
        Method { name: "resetCurve" }
    }
    Component {
        name: "lv::KeyframeTrack"
        defaultProperty: "segments"
        prototype: "lv::Track"
        exports: ["timeline/KeyframeTrack 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "value"; type: "double" }
        Signal {
            name: "valueChanged"
            Parameter { name: "value"; type: "double" }
        }
        Method {
            name: "__updateKeyframes"
            Parameter { name: "from"; type: "qlonglong" }
            Parameter { name: "to"; type: "qlonglong" }
        }
    }
    Component {
        name: "lv::KeyframeValue"
        prototype: "QObject"
        exports: ["timeline/KeyframeValue 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "timeline"; type: "lv::Timeline"; isPointer: true }
        Property { name: "track"; type: "QString" }
        Property { name: "value"; type: "double"; isReadonly: true }
        Method { name: "__readValue" }
        Method {
            name: "__trackAdded"
            Parameter { name: "track"; type: "Track"; isPointer: true }
        }
        Method {
            name: "__trackAboutToBeRemoved"
            Parameter { name: "track"; type: "Track"; isPointer: true }
        }
    }
    Component {
        name: "lv::Segment"
        prototype: "QObject"
        exports: ["timeline/Segment 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "position"; type: "uint" }
        Property { name: "length"; type: "uint" }
        Property { name: "maxStretchLeft"; type: "uint" }
        Property { name: "maxStretchRight"; type: "uint" }
        Property { name: "label"; type: "QString" }
        Property { name: "color"; type: "QColor" }
        Method { name: "remove" }
        Method { name: "segmentModel"; type: "lv::SegmentModel*" }
        Method {
            name: "stretchLeftTo"
            Parameter { name: "position"; type: "uint" }
        }
        Method {
            name: "stretchRightTo"
            Parameter { name: "position"; type: "uint" }
        }
    }
    Component {
        name: "lv::SegmentModel"
        prototype: "QAbstractRangeModel"
        exports: ["timeline/SegmentModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "snapThreshold"; type: "double" }
        Signal { name: "snapThrehsoldChanged" }
        Method {
            name: "availableSpace"
            type: "qlonglong"
            Parameter { name: "position"; type: "qlonglong" }
        }
        Method {
            name: "setSnapThreshold"
            Parameter { name: "snapThreshold"; type: "double" }
        }
    }
    Component {
        name: "lv::Timeline"
        defaultProperty: "tracks"
        prototype: "QObject"
        exports: ["timeline/Timeline 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "contentLength"; type: "qlonglong" }
        Property { name: "cursorPosition"; type: "qlonglong" }
        Property { name: "isRunning"; type: "bool"; isReadonly: true }
        Property { name: "fps"; type: "double" }
        Property { name: "loop"; type: "bool" }
        Property { name: "properties"; type: "QObject"; isPointer: true }
        Property { name: "file"; type: "QString" }
        Property { name: "config"; type: "lv::TimelineConfig"; isReadonly: true; isPointer: true }
        Property { name: "trackList"; type: "lv::TrackListModel"; isReadonly: true; isPointer: true }
        Property { name: "headerModel"; type: "TimelineHeaderModel"; isReadonly: true; isPointer: true }
        Property { name: "tracks"; type: "QObject"; isList: true; isReadonly: true }
        Signal {
            name: "cursorPositionChanged"
            Parameter { name: "position"; type: "qlonglong" }
        }
        Signal {
            name: "cursorPositionProcessed"
            Parameter { name: "position"; type: "qlonglong" }
        }
        Signal {
            name: "trackNameChanged"
            Parameter { name: "track"; type: "Track"; isPointer: true }
        }
        Method {
            name: "appendTrack"
            Parameter { name: "track"; type: "lv::Track"; isPointer: true }
        }
        Method {
            name: "removeTrack"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "start" }
        Method { name: "stop" }
        Method {
            name: "positionToLabel"
            type: "QString"
            Parameter { name: "frameNumber"; type: "qlonglong" }
            Parameter { name: "shortZero"; type: "bool" }
        }
        Method {
            name: "positionToLabel"
            type: "QString"
            Parameter { name: "frameNumber"; type: "qlonglong" }
        }
        Method { name: "__tick" }
        Method {
            name: "__trackCursorProcessed"
            Parameter { name: "track"; type: "Track"; isPointer: true }
            Parameter { name: "position"; type: "qlonglong" }
        }
        Method { name: "load" }
        Method { name: "save" }
        Method {
            name: "saveAs"
            Parameter { name: "path"; type: "QString" }
        }
    }
    Component {
        name: "lv::TimelineConfig"
        prototype: "QObject"
        exports: ["timeline/TimelineConfig 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "addLoader"
            Parameter { name: "key"; type: "QString" }
            Parameter { name: "path"; type: "QString" }
        }
        Method { name: "loaders"; type: "QJSValue" }
        Method {
            name: "trackMenu"
            type: "QJSValue"
            Parameter { name: "track"; type: "QObject"; isPointer: true }
        }
    }
    Component {
        name: "lv::TimelineHeaderModel"
        prototype: "QAbstractRangeModel"
        exports: ["timeline/TimelineHeaderModel 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "scale"; type: "double" }
        Method {
            name: "setScale"
            Parameter { name: "arg"; type: "double" }
        }
    }
    Component {
        name: "lv::Track"
        defaultProperty: "segments"
        prototype: "QObject"
        exports: ["timeline/Track 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "name"; type: "QString" }
        Property { name: "segmentModel"; type: "lv::SegmentModel"; isReadonly: true; isPointer: true }
        Property { name: "segments"; type: "QObject"; isList: true; isReadonly: true }
        Signal {
            name: "cursorProcessed"
            Parameter { name: "track"; type: "Track"; isPointer: true }
            Parameter { name: "position"; type: "qlonglong" }
        }
        Method {
            name: "addSegment"
            type: "bool"
            Parameter { name: "segment"; type: "lv::Segment"; isPointer: true }
        }
        Method {
            name: "takeSegment"
            type: "lv::Segment*"
            Parameter { name: "segment"; type: "lv::Segment"; isPointer: true }
        }
        Method {
            name: "availableSpace"
            type: "qlonglong"
            Parameter { name: "position"; type: "qlonglong" }
        }
        Method { name: "timeline"; type: "lv::Timeline*" }
        Method {
            name: "__segmentModelItemsChanged"
            Parameter { name: "startPosition"; type: "qlonglong" }
            Parameter { name: "endPosition"; type: "qlonglong" }
        }
    }
    Component {
        name: "lv::TrackListModel"
        prototype: "QAbstractListModel"
        exports: ["timeline/TrackListModel 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Signal {
            name: "trackAdded"
            Parameter { name: "track"; type: "Track"; isPointer: true }
        }
        Signal {
            name: "trackAboutToBeRemoved"
            Parameter { name: "track"; type: "Track"; isPointer: true }
        }
        Method {
            name: "appendTrack"
            Parameter { name: "track"; type: "Track"; isPointer: true }
        }
        Method { name: "appendTrack"; type: "Track*" }
        Method {
            name: "removeTrack"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "trackAt"
            type: "lv::Track*"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "clearTracks" }
        Method { name: "totalTracks"; type: "int" }
    }
}
