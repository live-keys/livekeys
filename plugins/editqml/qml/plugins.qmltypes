import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'Livekeys 1.6.0'

Module {
    dependencies: []
    Component {
        name: "QAbstractItemModel"
        prototype: "QObject"
        Enum {
            name: "LayoutChangeHint"
            values: {
                "NoLayoutChangeHint": 0,
                "VerticalSortHint": 1,
                "HorizontalSortHint": 2
            }
        }
        Enum {
            name: "CheckIndexOption"
            values: {
                "NoOption": 0,
                "IndexIsValid": 1,
                "DoNotUseParent": 2,
                "ParentIsInvalid": 4
            }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Signal {
            name: "headerDataChanged"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutChanged" }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutAboutToBeChanged" }
        Signal {
            name: "rowsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal { name: "modelAboutToBeReset" }
        Signal { name: "modelReset" }
        Signal {
            name: "rowsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationRow"; type: "int" }
        }
        Signal {
            name: "rowsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "row"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationColumn"; type: "int" }
        }
        Signal {
            name: "columnsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "submit"; type: "bool" }
        Method { name: "revert" }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "sibling"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "idx"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "fetchMore"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "canFetchMore"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "flags"
            type: "Qt::ItemFlags"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
            Parameter { name: "flags"; type: "Qt::MatchFlags" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component { name: "QAbstractListModel"; prototype: "QAbstractItemModel" }
    Component {
        name: "lv::CodeQmlHandler"
        prototype: "QObject"
        exports: ["editqml/CodeQmlHandler 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "cursorInfo"
            type: "lv::QmlCursorInfo*"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "length"; type: "int" }
        }
        Method {
            name: "openConnection"
            type: "lv::QmlEditFragment*"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "currentApp"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "openConnection"
            type: "lv::QmlEditFragment*"
            Parameter { name: "position"; type: "int" }
        }
        Method {
            name: "openNestedConnection"
            type: "lv::QmlEditFragment*"
            Parameter { name: "edit"; type: "lv::QmlEditFragment"; isPointer: true }
            Parameter { name: "position"; type: "int" }
            Parameter { name: "currentApp"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "openNestedConnection"
            type: "lv::QmlEditFragment*"
            Parameter { name: "edit"; type: "lv::QmlEditFragment"; isPointer: true }
            Parameter { name: "position"; type: "int" }
        }
        Method {
            name: "removeConnection"
            Parameter { name: "edit"; type: "lv::QmlEditFragment"; isPointer: true }
        }
        Method {
            name: "findPalettes"
            type: "lv::PaletteList*"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "unrepeated"; type: "bool" }
        }
        Method {
            name: "findPalettes"
            type: "lv::PaletteList*"
            Parameter { name: "position"; type: "int" }
        }
        Method {
            name: "openPalette"
            type: "lv::CodePalette*"
            Parameter { name: "fragment"; type: "lv::QmlEditFragment"; isPointer: true }
            Parameter { name: "palette"; type: "lv::PaletteList"; isPointer: true }
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "removePalette"
            type: "lv::QmlEditFragment*"
            Parameter { name: "palette"; type: "lv::CodePalette"; isPointer: true }
        }
        Method {
            name: "openBinding"
            type: "lv::CodePalette*"
            Parameter { name: "edit"; type: "lv::QmlEditFragment"; isPointer: true }
            Parameter { name: "paletteList"; type: "lv::PaletteList"; isPointer: true }
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "closeBinding"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "length"; type: "int" }
        }
        Method {
            name: "isForAnObject"
            type: "bool"
            Parameter { name: "palette"; type: "lv::QmlEditFragment"; isPointer: true }
        }
        Method {
            name: "frameEdit"
            Parameter { name: "box"; type: "QQuickItem"; isPointer: true }
            Parameter { name: "palette"; type: "lv::QmlEditFragment"; isPointer: true }
        }
        Method {
            name: "removeEditFrame"
            Parameter { name: "box"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "resizedEditFrame"
            Parameter { name: "box"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "edit"
            type: "lv::CodePalette*"
            Parameter { name: "ef"; type: "lv::QmlEditFragment"; isPointer: true }
        }
        Method { name: "cancelEdit" }
        Method {
            name: "getAddOptions"
            type: "lv::QmlAddContainer*"
            Parameter { name: "position"; type: "int" }
        }
        Method {
            name: "addProperty"
            type: "int"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "object"; type: "QString" }
            Parameter { name: "type"; type: "QString" }
            Parameter { name: "name"; type: "QString" }
            Parameter { name: "assignDefault"; type: "bool" }
        }
        Method {
            name: "addProperty"
            type: "int"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "object"; type: "QString" }
            Parameter { name: "type"; type: "QString" }
            Parameter { name: "name"; type: "QString" }
        }
        Method {
            name: "addItem"
            type: "int"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "object"; type: "QString" }
            Parameter { name: "type"; type: "QString" }
        }
        Method {
            name: "addItemToRuntime"
            Parameter { name: "edit"; type: "lv::QmlEditFragment"; isPointer: true }
            Parameter { name: "type"; type: "QString" }
            Parameter { name: "currentApp"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "addItemToRuntime"
            Parameter { name: "edit"; type: "lv::QmlEditFragment"; isPointer: true }
            Parameter { name: "type"; type: "QString" }
        }
        Method {
            name: "updateRuntimeBindings"
            Parameter { name: "obj"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "_documentContentsChanged"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "charsRemoved"; type: "int" }
            Parameter { name: "charsAdded"; type: "int" }
        }
        Method {
            name: "_documentFormatUpdate"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "length"; type: "int" }
        }
        Method {
            name: "newDocumentScopeReady"
            Parameter { name: "path"; type: "QString" }
            Parameter { name: "documentScope"; type: "DocumentQmlScope::Ptr" }
        }
        Method { name: "newProjectScopeReady" }
        Method { name: "updateScope" }
    }
    Component {
        name: "lv::ProjectQmlExtension"
        prototype: "QObject"
        exports: ["editqml/ProjectQmlExtension 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "createHandler"
            type: "QObject*"
            Parameter { name: "document"; type: "ProjectDocument"; isPointer: true }
            Parameter { name: "handler"; type: "DocumentHandler"; isPointer: true }
        }
    }
    Component {
        name: "lv::QmlAddContainer"
        prototype: "QObject"
        exports: ["editqml/QmlAddContainer 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "itemModel"; type: "lv::QmlItemModel"; isReadonly: true; isPointer: true }
        Property {
            name: "propertyModel"
            type: "lv::QmlPropertyModel"
            isReadonly: true
            isPointer: true
        }
        Property { name: "objectType"; type: "QString"; isReadonly: true }
    }
    Component {
        name: "lv::QmlCursorInfo"
        prototype: "QObject"
        exports: ["editqml/QmlCursorInfo 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "canBind"; type: "bool"; isReadonly: true }
        Property { name: "canUnbind"; type: "bool"; isReadonly: true }
        Property { name: "canEdit"; type: "bool"; isReadonly: true }
        Property { name: "canAdjust"; type: "bool"; isReadonly: true }
        Property { name: "canShape"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "lv::QmlEditFragment"
        prototype: "QObject"
        exports: ["editqml/QmlEditFragment 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "visualParent"; type: "QObject"; isPointer: true }
        Signal {
            name: "aboutToRemovePalette"
            Parameter { name: "palette"; type: "lv::CodePalette"; isPointer: true }
        }
        Signal { name: "aboutToBeRemoved" }
        Signal { name: "paletteListEmpty" }
        Method { name: "position"; type: "int" }
        Method { name: "valuePosition"; type: "int" }
        Method { name: "valueLength"; type: "int" }
        Method { name: "totalPalettes"; type: "int" }
        Method { name: "bindingPalette"; type: "lv::CodePalette*" }
        Method { name: "updateValue" }
    }
    Component {
        name: "lv::QmlItemModel"
        prototype: "QAbstractListModel"
        exports: ["editqml/QmlItemModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "addPosition"; type: "int"; isReadonly: true }
        Method {
            name: "setFilter"
            Parameter { name: "filter"; type: "QString" }
        }
        Method {
            name: "setImportFilter"
            Parameter { name: "categoryFilter"; type: "QString" }
        }
        Method { name: "importSpaces"; type: "QStringList" }
    }
    Component {
        name: "lv::QmlPropertyModel"
        prototype: "QAbstractListModel"
        exports: ["editqml/QmlPropertyModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "addPosition"; type: "int"; isReadonly: true }
        Method {
            name: "setFilter"
            Parameter { name: "filter"; type: "QString" }
        }
        Method {
            name: "setTypeFilter"
            Parameter { name: "typeFilter"; type: "QString" }
        }
        Method { name: "types"; type: "QStringList" }
    }
}
