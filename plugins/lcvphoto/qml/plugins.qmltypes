import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'Livekeys 1.6.0'

Module {
    dependencies: []
    Component {
        name: "QAlignMTB"
        prototype: "QObject"
        exports: ["lcvphoto/AlignMTB 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "input"; type: "lv::QmlObjectList"; isPointer: true }
        Property { name: "params"; type: "QVariantMap" }
        Property { name: "output"; type: "lv::QmlObjectList"; isPointer: true }
        Method {
            name: "setParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
    }
    Component {
        name: "QAutoLevels"
        prototype: "QObject"
        exports: ["lcvphoto/AutoLevels 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "histogram"; type: "QMat"; isPointer: true }
        Property { name: "output"; type: "QJSValue"; isReadonly: true }
        Method {
            name: "setHistogram"
            Parameter { name: "histogram"; type: "QMat"; isPointer: true }
        }
    }
    Component {
        name: "QBrightnessAndContrast"
        defaultProperty: "data"
        prototype: "QMatFilter"
        exports: ["lcvphoto/BrightnessAndContrast 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "brightness"; type: "double" }
        Property { name: "contrast"; type: "double" }
    }
    Component {
        name: "QCalibrateDebevec"
        prototype: "QObject"
        exports: ["lcvphoto/CalibrateDebevec 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "input"; type: "lv::QmlObjectList"; isPointer: true }
        Property { name: "times"; type: "QList<qreal>" }
        Property { name: "params"; type: "QVariantMap" }
        Property { name: "output"; type: "QMat"; isReadonly: true; isPointer: true }
        Method {
            name: "setParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
    }
    Component {
        name: "QCalibrateRobertson"
        prototype: "QObject"
        exports: ["lcvphoto/CalibrateRobertson 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "input"; type: "lv::QmlObjectList"; isPointer: true }
        Property { name: "times"; type: "QList<qreal>" }
        Property { name: "params"; type: "QVariantMap" }
        Property { name: "output"; type: "QMat"; isReadonly: true; isPointer: true }
        Method {
            name: "setParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
    }
    Component {
        name: "QDenoiseTvl1"
        defaultProperty: "data"
        prototype: "QMatFilter"
        exports: ["lcvphoto/DenoiseTvl1 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "bufferSize"; type: "int" }
        Property { name: "lambda"; type: "double" }
        Property { name: "nIters"; type: "int" }
    }
    Component {
        name: "QDenoising"
        prototype: "QObject"
        exports: ["lcvphoto/Denoising 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "fastNlMeans"
            Parameter { name: "context"; type: "lv::Act"; isPointer: true }
            Parameter { name: "input"; type: "QMat"; isPointer: true }
            Parameter { name: "h"; type: "float" }
            Parameter { name: "templateWindowSize"; type: "int" }
            Parameter { name: "searchWindowSize"; type: "int" }
        }
        Method {
            name: "fastNlMeans"
            Parameter { name: "context"; type: "lv::Act"; isPointer: true }
            Parameter { name: "input"; type: "QMat"; isPointer: true }
            Parameter { name: "h"; type: "float" }
            Parameter { name: "templateWindowSize"; type: "int" }
        }
        Method {
            name: "fastNlMeans"
            Parameter { name: "context"; type: "lv::Act"; isPointer: true }
            Parameter { name: "input"; type: "QMat"; isPointer: true }
            Parameter { name: "h"; type: "float" }
        }
        Method {
            name: "fastNlMeans"
            Parameter { name: "context"; type: "lv::Act"; isPointer: true }
            Parameter { name: "input"; type: "QMat"; isPointer: true }
        }
        Method {
            name: "fastNlMeansColored"
            Parameter { name: "context"; type: "lv::Act"; isPointer: true }
            Parameter { name: "input"; type: "QMat"; isPointer: true }
            Parameter { name: "h"; type: "float" }
            Parameter { name: "templateWindowSize"; type: "int" }
            Parameter { name: "searchWindowSize"; type: "int" }
        }
        Method {
            name: "fastNlMeansColored"
            Parameter { name: "context"; type: "lv::Act"; isPointer: true }
            Parameter { name: "input"; type: "QMat"; isPointer: true }
            Parameter { name: "h"; type: "float" }
            Parameter { name: "templateWindowSize"; type: "int" }
        }
        Method {
            name: "fastNlMeansColored"
            Parameter { name: "context"; type: "lv::Act"; isPointer: true }
            Parameter { name: "input"; type: "QMat"; isPointer: true }
            Parameter { name: "h"; type: "float" }
        }
        Method {
            name: "fastNlMeansColored"
            Parameter { name: "context"; type: "lv::Act"; isPointer: true }
            Parameter { name: "input"; type: "QMat"; isPointer: true }
        }
    }
    Component {
        name: "QHueSaturationLightness"
        defaultProperty: "data"
        prototype: "QMatFilter"
        exports: ["lcvphoto/HueSaturationLightness 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "hue"; type: "int" }
        Property { name: "saturation"; type: "int" }
        Property { name: "lightness"; type: "int" }
    }
    Component {
        name: "QMatDisplay"
        defaultProperty: "data"
        prototype: "QQuickItem"
        Property { name: "output"; type: "QMat"; isReadonly: true; isPointer: true }
        Property { name: "linearFilter"; type: "bool" }
    }
    Component {
        name: "QMatFilter"
        defaultProperty: "data"
        prototype: "QMatDisplay"
        Property { name: "input"; type: "QMat"; isPointer: true }
    }
    Component {
        name: "QMergeDebevec"
        prototype: "QObject"
        exports: ["lcvphoto/MergeDebevec 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "input"; type: "lv::QmlObjectList"; isPointer: true }
        Property { name: "times"; type: "QList<qreal>" }
        Property { name: "response"; type: "QMat"; isPointer: true }
        Property { name: "output"; type: "QMat"; isReadonly: true; isPointer: true }
    }
    Component {
        name: "QMergeRobertson"
        prototype: "QObject"
        exports: ["lcvphoto/MergeRobertson 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "input"; type: "lv::QmlObjectList"; isPointer: true }
        Property { name: "times"; type: "QList<qreal>" }
        Property { name: "response"; type: "QMat"; isPointer: true }
        Property { name: "output"; type: "QMat"; isReadonly: true; isPointer: true }
    }
    Component {
        name: "QStitcher"
        defaultProperty: "data"
        prototype: "QMatDisplay"
        exports: ["lcvphoto/Stitcher 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Ok": 0,
                "ErrNeedMoreFiles": 1,
                "ErrHomographyEstFail": 2,
                "ErrCameraParamsAdjustFail": 3
            }
        }
        Property { name: "input"; type: "lv::QmlObjectList"; isPointer: true }
        Property { name: "params"; type: "QVariantMap" }
        Signal {
            name: "error"
            Parameter { name: "status"; type: "int" }
        }
        Signal {
            name: "paramsChanged"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method {
            name: "setParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
    }
    Component {
        name: "QTonemap"
        defaultProperty: "data"
        prototype: "QMatDisplay"
        exports: ["lcvphoto/Tonemap 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "input"; type: "QMat"; isPointer: true }
        Property { name: "params"; type: "QVariantMap" }
        Signal { name: "outputChanged" }
        Method {
            name: "setParams"
            Parameter { name: "params"; type: "QVariantMap" }
        }
    }
    Component {
        name: "QTonemapDrago"
        defaultProperty: "data"
        prototype: "QTonemap"
        exports: ["lcvphoto/TonemapDrago 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QTonemapMantiuk"
        defaultProperty: "data"
        prototype: "QTonemap"
        exports: ["lcvphoto/TonemapMantiuk 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QTonemapReinard"
        defaultProperty: "data"
        prototype: "QTonemap"
        exports: ["lcvphoto/TonemapReinard 1.0"]
        exportMetaObjectRevisions: [0]
    }
}
