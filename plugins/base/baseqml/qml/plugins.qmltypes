import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'Livekeys 1.6.1'

Module {
    dependencies: []
    Component { name: "QAbstractListModel"; prototype: "QAbstractItemModel" }
    Component {
        name: "QObject"
        exports: [
            "QtQml/QtObject 2.0",
            "QtQuick/QtObject 2.0",
            "base/Shared 1.0"
        ]
        isCreatable: false
        exportMetaObjectRevisions: [0, 0, 0]
        Property { name: "objectName"; type: "QString" }
        Signal {
            name: "objectNameChanged"
            Parameter { name: "objectName"; type: "QString" }
        }
        Method { name: "toString" }
        Method { name: "destroy" }
        Method {
            name: "destroy"
            Parameter { name: "delay"; type: "int" }
        }
    }
    Component {
        name: "lv::Environment"
        prototype: "QObject"
        exports: ["base/Environment 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "os"; type: "QVariantMap"; isReadonly: true }
    }
    Component {
        name: "lv::ErrorHandler"
        prototype: "QObject"
        exports: ["base/ErrorHandler 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "target"; type: "QObject"; isPointer: true }
        Signal {
            name: "error"
            Parameter { name: "e"; type: "QJSValue" }
        }
        Signal {
            name: "fatal"
            Parameter { name: "e"; type: "QJSValue" }
        }
        Signal {
            name: "warning"
            Parameter { name: "e"; type: "QJSValue" }
        }
        Signal {
            name: "targetChanged"
            Parameter { name: "target"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "skip"
            Parameter { name: "error"; type: "QJSValue" }
        }
    }
    Component {
        name: "lv::Group"
        prototype: "QObject"
        exports: ["base/Group 1.0"]
        exportMetaObjectRevisions: [0]
        Signal { name: "complete" }
    }
    Component {
        name: "lv::GroupCollector"
        defaultProperty: "source"
        prototype: "QObject"
        exports: ["base/GroupCollector 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QQmlComponent"; isPointer: true }
        Property { name: "current"; type: "Group"; isReadonly: true; isPointer: true }
        Property { name: "output"; type: "Group"; isReadonly: true; isPointer: true }
        Signal { name: "complete" }
        Method { name: "reset" }
        Method { name: "release" }
    }
    Component {
        name: "lv::Layer"
        prototype: "QObject"
        exports: ["base/Layer 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "name"; type: "QString" }
        Signal {
            name: "nameChanged"
            Parameter { name: "name"; type: "QString" }
        }
        Signal {
            name: "viewReady"
            Parameter { name: "layer"; type: "Layer"; isPointer: true }
            Parameter { name: "view"; type: "QObject"; isPointer: true }
        }
    }
    Component {
        name: "lv::Memory"
        prototype: "QObject"
        exports: ["base/Memory 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method { name: "reloc" }
        Method {
            name: "recycleSize"
            Parameter { name: "o"; type: "Shared"; isPointer: true }
            Parameter { name: "size"; type: "int" }
        }
    }
    Component {
        name: "lv::QmlAct"
        prototype: "QObject"
        exports: ["base/Act 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "run"; type: "QJSValue" }
        Property { name: "args"; type: "QJSValue" }
        Property { name: "result"; type: "QJSValue"; isReadonly: true }
        Signal { name: "complete" }
        Method { name: "exec" }
    }
    Component {
        name: "lv::QmlClipboard"
        prototype: "QObject"
        exports: ["base/Clipboard 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "setText"
            Parameter { name: "text"; type: "QString" }
        }
        Method { name: "asText"; type: "QString" }
        Method { name: "hasText"; type: "bool" }
        Method {
            name: "setUrls"
            Parameter { name: "value"; type: "QJSValue" }
        }
        Method {
            name: "setPaths"
            Parameter { name: "value"; type: "QJSValue" }
        }
        Method { name: "hasUrls"; type: "bool" }
        Method { name: "asUrls"; type: "QJSValue" }
    }
    Component {
        name: "lv::QmlContainer"
        defaultProperty: "childObjects"
        prototype: "QObject"
        exports: ["base/Container 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "childObjects"; type: "QObject"; isList: true; isReadonly: true }
        Method {
            name: "prevChild"
            type: "QObject*"
            Parameter { name: "child"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "nextChild"
            type: "QObject*"
            Parameter { name: "child"; type: "QObject"; isPointer: true }
        }
    }
    Component {
        name: "lv::QmlExec"
        prototype: "QObject"
        exports: ["base/Exec 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ChannelMode"
            values: {
                "Silent": 0,
                "Read": 1,
                "Write": 2,
                "ReadWrite": 3
            }
        }
        Property { name: "path"; type: "QString" }
        Property { name: "args"; type: "QStringList" }
        Property { name: "mode"; type: "ChannelMode" }
        Property { name: "input"; type: "lv::QmlStream"; isPointer: true }
        Property { name: "out"; type: "lv::QmlStream"; isReadonly: true; isPointer: true }
        Signal { name: "ready" }
        Signal {
            name: "finished"
            Parameter { name: "code"; type: "int" }
        }
        Signal { name: "inChanged" }
        Method { name: "__processRead" }
        Method {
            name: "__processFinished"
            Parameter { name: "exitCode"; type: "int" }
            Parameter { name: "exitStatus"; type: "QProcess::ExitStatus" }
        }
        Method { name: "run" }
        Method { name: "closeInput" }
    }
    Component {
        name: "lv::QmlFollowUp"
        prototype: "lv::QmlAct"
        exports: ["base/FollowUp 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "prev"; type: "QJSValue"; isReadonly: true }
        Method { name: "_whenPrevChanged" }
    }
    Component {
        name: "lv::QmlIndexSelector"
        prototype: "QObject"
        exports: ["base/IndexSelector 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "list"; type: "QJSValue" }
        Property { name: "index"; type: "int" }
        Property { name: "current"; type: "QJSValue"; isReadonly: true }
    }
    Component {
        name: "lv::QmlObjectList"
        prototype: "QObject"
        exports: ["base/ObjectList 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "items"; type: "QObject"; isList: true; isReadonly: true }
        Method {
            name: "itemAt"
            type: "QObject*"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "itemCount"; type: "int" }
        Method { name: "clearItems" }
        Method {
            name: "appendItem"
            Parameter { name: "item"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "removeItemAt"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "assignAt"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "item"; type: "QObject"; isPointer: true }
        }
        Method { name: "model"; type: "lv::QmlObjectListModel*" }
        Method { name: "cloneConst"; type: "lv::QmlObjectList*" }
        Method { name: "clone"; type: "lv::QmlObjectList*" }
        Method { name: "toArray"; type: "QJSValue" }
    }
    Component {
        name: "lv::QmlObjectListModel"
        prototype: "QAbstractListModel"
        exports: ["base/ObjectListModel 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "appendData"
            Parameter { name: "data"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "removeAt"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "at"
            type: "QObject*"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "size"; type: "int" }
    }
    Component {
        name: "lv::QmlOpening"
        prototype: "lv::QmlAct"
        exports: ["base/Opening 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "lv::QmlScript"
        prototype: "QObject"
        exports: ["base/Script 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "argv"; type: "QJSValue"; isReadonly: true }
        Property { name: "argvTail"; type: "QJSValue"; isReadonly: true }
        Property { name: "environment"; type: "lv::Environment"; isReadonly: true; isPointer: true }
        Method {
            name: "scriptChanged"
            Parameter { name: "active"; type: "lv::Runnable"; isPointer: true }
        }
        Method { name: "name"; type: "QString" }
    }
    Component {
        name: "lv::QmlStream"
        prototype: "QObject"
        exports: ["base/Stream 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "forward"
            Parameter { name: "callback"; type: "QJSValue" }
        }
    }
    Component {
        name: "lv::QmlStreamFilter"
        prototype: "QObject"
        exports: ["base/StreamFilter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "pull"; type: "lv::QmlStream"; isPointer: true }
        Property { name: "run"; type: "QJSValue" }
        Property { name: "result"; type: "lv::QmlStream"; isReadonly: true; isPointer: true }
    }
    Component {
        name: "lv::QmlStreamIterator"
        prototype: "QObject"
        exports: ["base/StreamIterator 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "stream"; type: "lv::QmlStream"; isPointer: true }
        Property { name: "current"; type: "QJSValue"; isReadonly: true }
    }
    Component {
        name: "lv::QmlStreamLog"
        prototype: "QObject"
        exports: ["base/StreamLog 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "prefix"; type: "QString" }
        Property { name: "stream"; type: "lv::QmlStream"; isPointer: true }
    }
    Component {
        name: "lv::QmlVariantList"
        prototype: "QObject"
        exports: ["base/VariantList 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "items"; type: "QVariantList" }
        Method { name: "items"; type: "QVariantList" }
        Method {
            name: "itemAt"
            type: "QVariant"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "itemCount"; type: "int" }
        Method { name: "isConst"; type: "bool" }
        Method { name: "cloneConst"; type: "QmlVariantList*" }
        Method { name: "clone"; type: "QmlVariantList*" }
        Method { name: "clearItems" }
        Method {
            name: "appendItem"
            Parameter { name: "item"; type: "QVariant" }
        }
        Method {
            name: "removeItemAt"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "model"; type: "QmlVariantListModel*" }
    }
    Component {
        name: "lv::QmlVariantListModel"
        prototype: "QAbstractListModel"
        exports: ["base/VariantListModel 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "appendData"
            Parameter { name: "data"; type: "QVariant" }
        }
        Method {
            name: "removeAt"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "at"
            type: "QVariant"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "size"; type: "int" }
    }
    Component {
        name: "lv::QmlWritableStream"
        prototype: "QObject"
        exports: ["base/WritableStream 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "stream"; type: "lv::QmlStream"; isReadonly: true; isPointer: true }
        Method {
            name: "push"
            Parameter { name: "val"; type: "QJSValue" }
        }
    }
    Component {
        name: "lv::Settings"
        prototype: "QObject"
        exports: ["base/LiveSettings 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "path"; type: "QString"; isReadonly: true }
        Method {
            name: "file"
            type: "QObject*"
            Parameter { name: "key"; type: "QString" }
        }
        Method {
            name: "addConfigFile"
            Parameter { name: "key"; type: "QString" }
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
    }
    Component {
        name: "lv::ViewEngine"
        prototype: "QObject"
        exports: ["base/LiveEngine 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "isLoading"; type: "bool"; isReadonly: true }
        Signal {
            name: "aboutToCreateObject"
            Parameter { name: "file"; type: "QUrl" }
        }
        Signal {
            name: "objectAcquired"
            Parameter { name: "file"; type: "QUrl" }
            Parameter { name: "reference"; type: "QObject"; isPointer: true }
        }
        Signal {
            name: "isLoadingChanged"
            Parameter { name: "isLoading"; type: "bool" }
        }
        Signal {
            name: "objectReady"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
            Parameter { name: "file"; type: "QUrl" }
            Parameter { name: "reference"; type: "QObject"; isPointer: true }
            Parameter { name: "context"; type: "QQmlContext"; isPointer: true }
        }
        Signal {
            name: "objectCreationError"
            Parameter { name: "errors"; type: "QJSValue" }
            Parameter { name: "file"; type: "QUrl" }
            Parameter { name: "reference"; type: "QObject"; isPointer: true }
            Parameter { name: "context"; type: "QQmlContext"; isPointer: true }
        }
        Signal {
            name: "applicationError"
            Parameter { name: "error"; type: "QJSValue" }
        }
        Signal {
            name: "applicationWarning"
            Parameter { name: "warning"; type: "QJSValue" }
        }
        Method {
            name: "createObjectAsync"
            Parameter { name: "qmlCode"; type: "QString" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
            Parameter { name: "file"; type: "QUrl" }
            Parameter { name: "reference"; type: "QObject"; isPointer: true }
            Parameter { name: "context"; type: "QQmlContext"; isPointer: true }
            Parameter { name: "clearCache"; type: "bool" }
        }
        Method {
            name: "createObjectAsync"
            Parameter { name: "qmlCode"; type: "QString" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
            Parameter { name: "file"; type: "QUrl" }
            Parameter { name: "reference"; type: "QObject"; isPointer: true }
            Parameter { name: "context"; type: "QQmlContext"; isPointer: true }
        }
        Method {
            name: "createObjectAsync"
            Parameter { name: "qmlCode"; type: "QString" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
            Parameter { name: "file"; type: "QUrl" }
            Parameter { name: "reference"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "createObjectAsync"
            Parameter { name: "qmlCode"; type: "QString" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
            Parameter { name: "file"; type: "QUrl" }
        }
        Method {
            name: "createObject"
            type: "QObject*"
            Parameter { name: "qmlCode"; type: "QString" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
            Parameter { name: "file"; type: "QUrl" }
            Parameter { name: "clearCache"; type: "bool" }
        }
        Method {
            name: "createObject"
            type: "QObject*"
            Parameter { name: "qmlCode"; type: "QString" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
            Parameter { name: "file"; type: "QUrl" }
        }
        Method {
            name: "engineWarnings"
            Parameter { name: "warnings"; type: "QList<QQmlError>" }
        }
        Method {
            name: "throwError"
            Parameter { name: "error"; type: "QJSValue" }
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "throwError"
            Parameter { name: "error"; type: "QJSValue" }
        }
        Method {
            name: "throwWarning"
            Parameter { name: "error"; type: "QJSValue" }
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "throwWarning"
            Parameter { name: "error"; type: "QJSValue" }
        }
        Method {
            name: "markErrorObject"
            type: "QString"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Method { name: "lastErrorsObject"; type: "QJSValue" }
    }
    Component {
        name: "lv::VisualLogBaseModel"
        prototype: "QAbstractListModel"
        exports: ["base/VisualLogBaseModel 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "lv::VisualLogModel"
        prototype: "lv::VisualLogBaseModel"
        exports: ["base/VisualLogModel 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "width"; type: "int" }
        Signal {
            name: "widthChanged"
            Parameter { name: "width"; type: "int" }
        }
        Signal { name: "entryAdded" }
        Method {
            name: "setWidth"
            Parameter { name: "width"; type: "int" }
        }
        Method { name: "clearValues" }
    }
    Component {
        name: "lv::VisualLogQmlObject"
        prototype: "QObject"
        exports: ["base/VisualLog 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method {
            name: "f"
            Parameter { name: "messageOrCategory"; type: "QJSValue" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "f"
            Parameter { name: "messageOrCategory"; type: "QJSValue" }
        }
        Method {
            name: "e"
            Parameter { name: "messageOrCategory"; type: "QJSValue" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "e"
            Parameter { name: "messageOrCategory"; type: "QJSValue" }
        }
        Method {
            name: "w"
            Parameter { name: "messageOrCategory"; type: "QJSValue" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "w"
            Parameter { name: "messageOrCategory"; type: "QJSValue" }
        }
        Method {
            name: "i"
            Parameter { name: "messageOrCategory"; type: "QJSValue" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "i"
            Parameter { name: "messageOrCategory"; type: "QJSValue" }
        }
        Method {
            name: "d"
            Parameter { name: "messageOrCategory"; type: "QJSValue" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "d"
            Parameter { name: "messageOrCategory"; type: "QJSValue" }
        }
        Method {
            name: "v"
            Parameter { name: "messageOrCategory"; type: "QJSValue" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "v"
            Parameter { name: "messageOrCategory"; type: "QJSValue" }
        }
        Method {
            name: "configure"
            Parameter { name: "name"; type: "QString" }
            Parameter { name: "options"; type: "QJSValue" }
        }
    }
    Component {
        name: "lv::WindowLayer"
        prototype: "lv::Layer"
        exports: ["base/WindowLayer 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "dialogs"; type: "QObject"; isReadonly: true; isPointer: true }
        Property { name: "handle"; type: "QObject"; isReadonly: true; isPointer: true }
        Property { name: "clipboard"; type: "lv::QmlClipboard"; isReadonly: true; isPointer: true }
        Signal {
            name: "isActiveChanged"
            Parameter { name: "isActive"; type: "bool" }
        }
        Method { name: "windowActiveChanged" }
        Method { name: "window"; type: "QQuickWindow*" }
    }
}
